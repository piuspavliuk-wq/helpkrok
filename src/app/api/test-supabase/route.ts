import { NextRequest, NextResponse } from 'next/server'
import { supabaseAdmin } from '@/lib/supabase'

export async function GET(request: NextRequest) {
  try {
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Supabase –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...');
    
    if (!supabaseAdmin) {
      return NextResponse.json({
        success: false,
        error: 'Supabase Admin –∫–ª—ñ—î–Ω—Ç –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π',
        details: {
          url: process.env.NEXT_PUBLIC_SUPABASE_URL,
          serviceKey: process.env.SUPABASE_SERVICE_ROLE_KEY ? '–Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π' : '–Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π'
        }
      })
    }

    // –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    const { data, error } = await supabaseAdmin
      .from('users')
      .select('count')
      .limit(1)

    if (error) {
      console.error('‚ùå Supabase error:', error);
      return NextResponse.json({
        success: false,
        error: '–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase',
        details: error
      })
    }

    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    const { data: users, error: usersError } = await supabaseAdmin
      .from('users')
      .select('*')

    if (usersError) {
      console.error('‚ùå Users error:', usersError);
      return NextResponse.json({
        success: false,
        error: '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤',
        details: usersError
      })
    }

    console.log('‚úÖ Supabase –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('üìä –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:', users);

    return NextResponse.json({
      success: true,
      message: 'Supabase –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ',
      usersCount: users?.length || 0,
      users: users
    })

  } catch (error) {
    console.error('‚ùå Test error:', error);
    return NextResponse.json({
      success: false,
      error: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞',
      details: error instanceof Error ? error.message : 'Unknown error'
    })
  }
}
