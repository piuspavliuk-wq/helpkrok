'use client'

import { useState, useEffect } from 'react'
import { useSession } from 'next-auth/react'
import { Save, ChevronDown, X } from 'lucide-react'

interface ProfileData {
  firstName: string
  lastName: string
  faculty: string
  university: string
  email: string
  step: string
}

const universities = [
  '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –í. –ù. –ö–∞—Ä–∞–∑—ñ–Ω–∞',
  '(–ö–∏–ú–£) –ö–∏—ó–≤—Å—å–∫–∏–π –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
  '–ß–µ—Ä–∫–∞—Å—å–∫–∞ –º–µ–¥–∏—á–Ω–∞ –∞–∫–∞–¥–µ–º—ñ—è',
  '–í–æ–ª–∏–Ω—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –õ–µ—Å—ñ –£–∫—Ä–∞—ó–Ω–∫–∏',
  '–ö–∏—ó–≤—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –¢–∞—Ä–∞—Å–∞ –®–µ–≤—á–µ–Ω–∫–∞',
  '–ß–æ—Ä–Ω–æ–º–æ—Ä—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –ü–µ—Ç—Ä–∞ –ú–æ–≥–∏–ª–∏',
  '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–π –º–µ–¥–∏—á–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
  '–ú—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–π –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∏–π –£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
  '(–ú–ê–£–ü) –ú—ñ–∂—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∞ –ê–∫–∞–¥–µ–º—ñ—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º',
  '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–¥–∏—Ü–∏–Ω–∏ —Ç–∞ –≥—Ä–æ–º–∞–¥—Å—å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤\'—è',
  '–ö–∏—ó–≤—Å—å–∫–∏–π –º—ñ—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
  '–•–µ—Ä—Å–æ–Ω—Å—å–∫–∏–π –¥–µ—Ä–∂–∞–≤–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
  '–ú–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂ ¬´–ú–æ–Ω–∞–¥–∞¬ª',
  '–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
  '–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç',
  '–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
  '–ö–ó–í–û ¬´–í–æ–ª–∏–Ω—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç¬ª',
  '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π –±–∞–∑–æ–≤–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
  '–®–µ–ø–µ—Ç—ñ–≤—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
  '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–¥–∏—Ü–∏–Ω–∏ —Ç–∞ –±—ñ–æ–º–µ–¥–∏—á–Ω–∏—Ö –Ω–∞—É–∫',
  '(–ñ–ë–§–§–ö) –ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∏–π –±–∞–∑–æ–≤–∏–π —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
  '–ö–∞–º\'—è–Ω–µ—Ü—å-–ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
  '–ö–∞–º\'—è–Ω—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
  '–ù–∞–≤—á–∞–ª—å–Ω–æ-–Ω–∞—É–∫–æ–≤–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–¥—Å–µ—Å—Ç—Ä–∏–Ω—Å—Ç–≤–∞'
]

export default function ProfileEditForm() {
  console.log('üöÄ ProfileEditForm –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...')
  
  const { data: session } = useSession()
  const [profileData, setProfileData] = useState<ProfileData>({
    firstName: '',
    lastName: '',
    faculty: 'medical',
    university: '',
    email: '',
    step: 'krok1'
  })
  
  // Debug: –ª–æ–≥—É—î–º–æ –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É
  useEffect(() => {
    console.log('üîÑ –°—Ç–∞–Ω –ø—Ä–æ—Ñ—ñ–ª—é –∑–º—ñ–Ω–∏–≤—Å—è:', profileData)
  }, [profileData])
  
  const [saving, setSaving] = useState(false)
  const [loading, setLoading] = useState(true)
  const [universityDropdownOpen, setUniversityDropdownOpen] = useState(false)
  const [facultyDropdownOpen, setFacultyDropdownOpen] = useState(false)
  const [stepDropdownOpen, setStepDropdownOpen] = useState(false)
  const [universitySearch, setUniversitySearch] = useState('')
  const [filteredUniversities, setFilteredUniversities] = useState(universities)

  useEffect(() => {
    if (session?.user?.id) {
      console.log('üë§ –°–µ—Å—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', session.user)
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø–æ–≤–Ω—é—î–º–æ –≤—Å—ñ –ø–æ–ª—è –∑ —Å–µ—Å—ñ—ó
      const nameParts = session.user.name?.split(' ') || []
      setProfileData(prev => ({
        ...prev,
        firstName: nameParts[0] || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
        lastName: nameParts.slice(1).join(' ') || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
        email: session.user.email || 'email@example.com',
        faculty: 'medical', // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        step: 'krok1', // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        university: prev.university // –ó–∞–ª–∏—à–∞—î–º–æ —è–∫ —î
      }))
      
      fetchProfileData()
    }
  }, [session])

  const fetchProfileData = async () => {
    try {
      setLoading(true)
      console.log('üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ—Ñ—ñ–ª—é...')
      
      const response = await fetch('/api/user/profile')
      const data = await response.json()
      
      console.log('üìä –î–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é –∑ API:', data)
      
      if (data.success && data.profile) {
        const newProfileData = {
          firstName: data.profile.firstName || '',
          lastName: data.profile.lastName || '',
          faculty: data.profile.faculty || 'medical',
          university: data.profile.university || '',
          email: data.profile.email || '',
          step: data.profile.step || 'krok1'
        }
        
        console.log('‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é:', newProfileData)
        setProfileData(newProfileData)
        setUniversitySearch(data.profile.university || '')
      } else {
        console.log('‚ö†Ô∏è –ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ')
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é:', error)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç–∏ –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
    const filtered = universities.filter(uni =>
      uni.toLowerCase().includes(universitySearch.toLowerCase())
    )
    setFilteredUniversities(filtered)
  }, [universitySearch])

  const handleSave = async () => {
    setSaving(true)
    try {
      // Debug: –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞–Ω—ñ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é
      console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é:', profileData)
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç—ñ–ª—å–∫–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç
      if (!profileData.university) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç')
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç')
        return
      }
      
      console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ–ª—ñ–≤:', {
        profileData,
        university: profileData.university
      })

      const response = await fetch('/api/user/profile', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(profileData),
      })

      const data = await response.json()
      console.log('üì• –í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ API:', data)

      if (response.ok && data.success) {
        alert('–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ Supabase!')
        // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ
        fetchProfileData()
      } else {
        throw new Error(data.error || '–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é')
      }
    } catch (error) {
      console.error('Error saving profile:', error)
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é: ' + (error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'))
    } finally {
      setSaving(false)
    }
  }

  const handleUniversitySelect = (university: string) => {
    setProfileData(prev => ({ ...prev, university }))
    setUniversitySearch(university)
    setUniversityDropdownOpen(false)
  }

  const handleFacultySelect = (faculty: string) => {
    setProfileData(prev => ({ ...prev, faculty }))
    setFacultyDropdownOpen(false)
  }

  const handleStepSelect = (step: string) => {
    setProfileData(prev => ({ ...prev, step }))
    setStepDropdownOpen(false)
  }

  const getFacultyLabel = (faculty: string) => {
    return faculty === 'medical' ? '–ú–µ–¥–∏—Ü–∏–Ω–∞' : '–§–∞—Ä–º–∞—Ü—ñ—è'
  }

  const getStepLabel = (step: string) => {
    return step === 'krok1' ? '–ö—Ä–æ–∫ 1' : step === 'krok2' ? '–ö—Ä–æ–∫ 2' : '–ö—Ä–æ–∫ 3'
  }

  if (loading) {
    return (
      <div className="space-y-6">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-1/3 mb-6"></div>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {[...Array(5)].map((_, i) => (
              <div key={i} className="h-16 bg-gray-200 rounded"></div>
            ))}
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-gray-900">–û—Å–Ω–æ–≤–Ω—ñ –¥–∞–Ω—ñ</h2>
      </div>

      {/* Form */}
      <div className="bg-white/80 backdrop-blur-sm rounded-lg shadow-sm border border-white/60 p-6">
        <div className="space-y-6">
          {/* –¢—ñ–ª—å–∫–∏ –ø–æ–ª–µ –¥–ª—è —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É */}
          <div className="relative">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ó–∞–∫–ª–∞–¥ –æ—Å–≤—ñ—Ç–∏ <span className="text-red-500">*</span>
            </label>
            <div className="relative">
              <input
                type="text"
                value={universitySearch}
                onChange={(e) => {
                  setUniversitySearch(e.target.value)
                  setUniversityDropdownOpen(true)
                }}
                onFocus={() => setUniversityDropdownOpen(true)}
                className="w-full px-3 py-2 pr-20 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-50"
                placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É"
              />
              <div className="absolute right-2 top-1/2 transform -translate-y-1/2 flex items-center space-x-1">
                {universitySearch && (
                  <button
                    onClick={() => {
                      setUniversitySearch('')
                      setProfileData(prev => ({ ...prev, university: '' }))
                    }}
                    className="p-1 hover:bg-gray-200 rounded"
                  >
                    <X className="w-4 h-4 text-gray-400" />
                  </button>
                )}
                <button
                  onClick={() => setUniversityDropdownOpen(!universityDropdownOpen)}
                  className="p-1 hover:bg-gray-200 rounded"
                >
                  <ChevronDown className="w-4 h-4 text-gray-400" />
                </button>
              </div>
            </div>
            
            {universityDropdownOpen && (
              <div className="absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto">
                <div className="py-1">
                  {filteredUniversities.map((university) => (
                    <button
                      key={university}
                      onClick={() => handleUniversitySelect(university)}
                      className={`w-full px-3 py-2 text-left hover:bg-gray-100 flex items-center justify-between ${
                        profileData.university === university ? 'bg-blue-50' : ''
                      }`}
                    >
                      <span>{university}</span>
                      {profileData.university === university && (
                        <span className="text-blue-500">‚úì</span>
                      )}
                    </button>
                  ))}
                </div>
              </div>
            )}
          </div>

          {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É) */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü—Ä—ñ–∑–≤–∏—â–µ, —ñ–º'—è
              </label>
              <div className="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100 text-gray-600">
                {`${profileData.firstName} ${profileData.lastName}`.trim()}
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Email
              </label>
              <div className="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100 text-gray-600">
                {profileData.email}
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –§–∞–∫—É–ª—å—Ç–µ—Ç
              </label>
              <div className="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100 text-gray-600">
                {getFacultyLabel(profileData.faculty)}
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö—Ä–æ–∫
              </label>
              <div className="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100 text-gray-600">
                {getStepLabel(profileData.step)}
              </div>
            </div>
          </div>
        </div>

        {/* Save Button */}
        <div className="flex justify-end mt-8">
          <button
            onClick={handleSave}
            disabled={saving}
            className="w-full bg-blue-500/80 backdrop-blur-sm hover:bg-blue-600/90 text-white font-medium py-2 px-4 rounded-lg transition-all duration-300 shadow-sm hover:shadow-md disabled:opacity-50"
          >
            <Save className="w-4 h-4 inline mr-2" />
            {saving ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : '–ó–±–µ—Ä–µ–≥—Ç–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç'}
          </button>
        </div>
      </div>
    </div>
  )
}