#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –≤ Supabase
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Ç–∏–ø–∏ –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ Prisma
 */

import { createClient } from '@supabase/supabase-js'

// Supabase –∫–ª—ñ—î–Ω—Ç –∑ service role key
const supabaseUrl = 'https://nttyhnbjlsnrxbcoxglw.supabase.co'
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im50dHlobmJqbHNucnhiY294Z2x3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NDUyMzEsImV4cCI6MjA3MzUyMTIzMX0.l6ieAE6s5CPxJ8Mw39MYLXAIvhwhFZzwFEea5z1EA-8'

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function createTables() {
  try {
    console.log('üèóÔ∏è –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ –≤ Supabase...')

    // SQL –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
    const createUsersTable = `
      CREATE TABLE IF NOT EXISTS users (
        id TEXT PRIMARY KEY,
        telegram_id TEXT UNIQUE,
        telegram_username TEXT,
        first_name TEXT,
        last_name TEXT,
        email TEXT UNIQUE,
        faculty TEXT CHECK (faculty IN ('medical', 'pharmaceutical')),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      );
    `

    const createSubscriptionsTable = `
      CREATE TABLE IF NOT EXISTS user_subscriptions (
        id TEXT PRIMARY KEY,
        user_id TEXT REFERENCES users(id) ON DELETE CASCADE,
        subscription_type TEXT CHECK (subscription_type IN ('medical', 'pharmaceutical', 'premium')),
        status TEXT CHECK (status IN ('pending', 'active', 'expired', 'cancelled')) DEFAULT 'pending',
        start_date TIMESTAMP WITH TIME ZONE NOT NULL,
        end_date TIMESTAMP WITH TIME ZONE NOT NULL,
        payment_provider TEXT CHECK (payment_provider IN ('stripe', 'liqpay', 'fondy')),
        payment_id TEXT,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      );
    `

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
    console.log('üìã –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é users...')
    const { error: usersError } = await supabase.rpc('exec_sql', { sql: createUsersTable })
    
    if (usersError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ users:', usersError)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è users —Å—Ç–≤–æ—Ä–µ–Ω–∞')
    }

    console.log('üìã –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é user_subscriptions...')
    const { error: subsError } = await supabase.rpc('exec_sql', { sql: createSubscriptionsTable })
    
    if (subsError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ user_subscriptions:', subsError)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è user_subscriptions —Å—Ç–≤–æ—Ä–µ–Ω–∞')
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç–∞–±–ª–∏—Ü—ñ —Å—Ç–≤–æ—Ä–µ–Ω—ñ
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ...')
    
    const { data: users, error: usersCheckError } = await supabase
      .from('users')
      .select('*')
      .limit(1)

    if (usersCheckError) {
      console.error('‚ùå –¢–∞–±–ª–∏—Ü—è users –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞:', usersCheckError)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è users –¥–æ—Å—Ç—É–ø–Ω–∞')
    }

    const { data: subscriptions, error: subsCheckError } = await supabase
      .from('user_subscriptions')
      .select('*')
      .limit(1)

    if (subsCheckError) {
      console.error('‚ùå –¢–∞–±–ª–∏—Ü—è user_subscriptions –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞:', subsCheckError)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü—è user_subscriptions –¥–æ—Å—Ç—É–ø–Ω–∞')
    }

    console.log('')
    console.log('üéâ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    console.log('')
    console.log('üìù –©–æ –¥–∞–ª—ñ:')
    console.log('1. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ç–∞–±–ª–∏—Ü—ñ –≤ Supabase Dashboard')
    console.log('2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: npm run check:supabase')
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error)
  }
}

// –ó–∞–ø—É—Å–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
createTables()
  .then(() => {
    console.log('‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å –Ω–µ –≤–¥–∞–ª–æ—Å—è:', error)
    process.exit(1)
  })
