#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ RLS —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å Supabase
 */

import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://nttyhnbjlsnrxbcoxglw.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im50dHlobmJqbHNucnhiY294Z2x3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NDUyMzEsImV4cCI6MjA3MzUyMTIzMX0.l6ieAE6s5CPxJ8Mw39MYLXAIvhwhFZzwFEea5z1EA-8'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function checkRLS() {
  try {
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ RLS —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Supabase...')
    console.log('')

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç
    console.log('üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–æ–µ–∫—Ç:')
    console.log(`   URL: ${supabaseUrl}`)
    console.log(`   Project ID: nttyhnbjlsnrxbcoxglw`)
    console.log('')

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users
    console.log('1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users...')
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('*')
      .limit(3)

    if (usersError) {
      console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${usersError.message}`)
      console.log(`   –ö–æ–¥: ${usersError.code}`)
      
      if (usersError.code === 'PGRST301') {
        console.log('')
        console.log('üö® –ü–†–û–ë–õ–ï–ú–ê: RLS (Row Level Security) –±–ª–æ–∫—É—î –¥–æ—Å—Ç—É–ø!')
        console.log('')
        console.log('üí° –†—ñ—à–µ–Ω–Ω—è:')
        console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ Supabase Dashboard')
        console.log('2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ Authentication ‚Üí Policies')
        console.log('3. –ó–Ω–∞–π–¥—ñ—Ç—å —Ç–∞–±–ª–∏—Ü—é "users"')
        console.log('4. –ê–±–æ –≤—ñ–¥–∫–ª—é—á—ñ—Ç—å RLS, –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –ø–æ–ª—ñ—Ç–∏–∫—É:')
        console.log('')
        console.log('   CREATE POLICY "Enable read access for all users" ON "public"."users"')
        console.log('   FOR SELECT USING (true);')
        console.log('')
        console.log('   CREATE POLICY "Enable insert for all users" ON "public"."users"')
        console.log('   FOR INSERT WITH CHECK (true);')
      }
    } else {
      console.log(`‚úÖ –î–æ—Å—Ç—É–ø –ø—Ä–∞—Ü—é—î! –ó–Ω–∞–π–¥–µ–Ω–æ ${users?.length || 0} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤`)
      
      if (users && users.length > 0) {
        console.log('')
        console.log('üìã –û—Å—Ç–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:')
        users.forEach((user, index) => {
          console.log(`${index + 1}. ${user.first_name} ${user.last_name} (${user.email})`)
        })
      }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—Å—Ç–∞–≤–∫–∏
    console.log('')
    console.log('2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤—Å—Ç–∞–≤–∫–∏...')
    const testData = {
      id: `debug-test-${Date.now()}`,
      first_name: 'Debug',
      last_name: 'Test',
      email: `debug-${Date.now()}@test.com`,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    }

    const { data: insertData, error: insertError } = await supabase
      .from('users')
      .insert(testData)
      .select()

    if (insertError) {
      console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–≤–∫–∏: ${insertError.message}`)
      console.log(`   –ö–æ–¥: ${insertError.code}`)
    } else {
      console.log('‚úÖ –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–∞—Ü—é—î!')
      console.log(`   –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${insertData?.[0]?.email}`)
    }

    console.log('')
    console.log('üéØ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è Supabase Dashboard:')
    console.log('')
    console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ: https://supabase.com/dashboard/project/nttyhnbjlsnrxbcoxglw')
    console.log('2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ Table Editor')
    console.log('3. –û–±–µ—Ä—ñ—Ç—å —Ç–∞–±–ª–∏—Ü—é "users"')
    console.log('4. –Ø–∫—â–æ —Ç–∞–±–ª–∏—Ü—è –ø–æ—Ä–æ–∂–Ω—è, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ:')
    console.log('   - Authentication ‚Üí Policies')
    console.log('   - Database ‚Üí Tables ‚Üí users ‚Üí Settings')
    console.log('   - –í—ñ–¥–∫–ª—é—á—ñ—Ç—å RLS –∞–±–æ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –ø–æ–ª—ñ—Ç–∏–∫–∏')
    console.log('')
    console.log('5. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ SQL Editor:')
    console.log('   SELECT * FROM users ORDER BY created_at DESC LIMIT 10;')

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error)
  }
}

checkRLS()
  .then(() => {
    console.log('‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ –≤–¥–∞–ª–∞—Å—è:', error)
    process.exit(1)
  })
