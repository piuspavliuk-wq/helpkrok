#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤ Supabase
 */

import { createClient } from '@supabase/supabase-js'

// Supabase –∫–ª—ñ—î–Ω—Ç –∑ –ø—É–±–ª—ñ—á–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏
const supabaseUrl = 'https://nttyhnbjlsnrxbcoxglw.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im50dHlobmJqbHNucnhiY294Z2x3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc5NDUyMzEsImV4cCI6MjA3MzUyMTIzMX0.l6ieAE6s5CPxJ8Mw39MYLXAIvhwhFZzwFEea5z1EA-8'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function checkUsers() {
  try {
    console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤ Supabase...')

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('id, first_name, last_name, email, faculty, created_at')
      .order('created_at', { ascending: false })
      .limit(10)

    if (usersError) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:', usersError)
      return
    }

    if (!users || users.length === 0) {
      console.log('üì≠ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ Supabase')
      console.log('')
      console.log('üí° –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:')
      console.log('1. –¢–∞–±–ª–∏—Ü—è "users" –Ω–µ —ñ—Å–Ω—É—î –≤ Supabase')
      console.log('2. RLS (Row Level Security) –±–ª–æ–∫—É—î –¥–æ—Å—Ç—É–ø')
      console.log('3. –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –Ω–µ –ø—Ä–∞—Ü—é—î')
      return
    }

    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${users.length} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤ Supabase:`)
    console.log('')
    
    users.forEach((user, index) => {
      console.log(`${index + 1}. ${user.first_name} ${user.last_name}`)
      console.log(`   Email: ${user.email}`)
      console.log(`   Faculty: ${user.faculty || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}`)
      console.log(`   Created: ${new Date(user.created_at).toLocaleString('uk-UA')}`)
      console.log(`   ID: ${user.id}`)
      console.log('')
    })

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–ø–∏—Å–∫–∏
    const { data: subscriptions, error: subsError } = await supabase
      .from('user_subscriptions')
      .select('id, user_id, subscription_type, status, payment_provider, created_at')
      .order('created_at', { ascending: false })
      .limit(5)

    if (subsError) {
      console.log('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫–∏ (–º–æ–∂–ª–∏–≤–æ —Ç–∞–±–ª–∏—Ü—è –Ω–µ —ñ—Å–Ω—É—î)')
    } else if (subscriptions && subscriptions.length > 0) {
      console.log(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${subscriptions.length} –ø—ñ–¥–ø–∏—Å–æ–∫:`)
      subscriptions.forEach((sub, index) => {
        console.log(`${index + 1}. ${sub.subscription_type} (${sub.status}) - ${sub.payment_provider}`)
        console.log(`   User ID: ${sub.user_id}`)
        console.log(`   Created: ${new Date(sub.created_at).toLocaleString('uk-UA')}`)
        console.log('')
      })
    } else {
      console.log('üì≠ –ü—ñ–¥–ø–∏—Å–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')
    }

    console.log('üéâ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    console.log('')
    console.log('üìù –©–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤ Supabase Dashboard:')
    console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ https://supabase.com/dashboard')
    console.log('2. –û–±–µ—Ä—ñ—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç')
    console.log('3. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ Table Editor')
    console.log('4. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ç–∞–±–ª–∏—Ü—ñ "users" —Ç–∞ "user_subscriptions"')

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error)
  }
}

// –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
checkUsers()
  .then(() => {
    console.log('‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('üí• –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ –≤–¥–∞–ª–∞—Å—è:', error)
    process.exit(1)
  })
