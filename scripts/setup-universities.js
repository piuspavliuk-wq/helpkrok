const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è Supabase')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function testConnection() {
  console.log('üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase...')
  
  try {
    const { data, error } = await supabase
      .from('users')
      .select('count')
      .limit(1)

    if (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', error)
      return false
    }

    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase —É—Å–ø—ñ—à–Ω–µ')
    return true
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', error)
    return false
  }
}

async function createUniversities() {
  console.log('üìö –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤...')
  
  const universities = [
    '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –í. –ù. –ö–∞—Ä–∞–∑—ñ–Ω–∞',
    '(–ö–∏–ú–£) –ö–∏—ó–≤—Å—å–∫–∏–π –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
    '–ß–µ—Ä–∫–∞—Å—å–∫–∞ –º–µ–¥–∏—á–Ω–∞ –∞–∫–∞–¥–µ–º—ñ—è',
    '–í–æ–ª–∏–Ω—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –õ–µ—Å—ñ –£–∫—Ä–∞—ó–Ω–∫–∏',
    '–ö–∏—ó–≤—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –¢–∞—Ä–∞—Å–∞ –®–µ–≤—á–µ–Ω–∫–∞',
    '–ß–æ—Ä–Ω–æ–º–æ—Ä—Å—å–∫–∏–π –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç —ñ–º–µ–Ω—ñ –ü–µ—Ç—Ä–∞ –ú–æ–≥–∏–ª–∏',
    '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–π –º–µ–¥–∏—á–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
    '–ú—ñ–∂–Ω–∞—Ä–æ–¥–Ω–∏–π –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∏–π –£–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
    '(–ú–ê–£–ü) –ú—ñ–∂—Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∞ –ê–∫–∞–¥–µ–º—ñ—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º',
    '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–¥–∏—Ü–∏–Ω–∏ —Ç–∞ –≥—Ä–æ–º–∞–¥—Å—å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤\'—è',
    '–ö–∏—ó–≤—Å—å–∫–∏–π –º—ñ—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
    '–•–µ—Ä—Å–æ–Ω—Å—å–∫–∏–π –¥–µ—Ä–∂–∞–≤–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç',
    '–ú–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂ ¬´–ú–æ–Ω–∞–¥–∞¬ª',
    '–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
    '–ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç',
    '–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
    '–ö–ó–í–û ¬´–í–æ–ª–∏–Ω—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç¬ª',
    '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π –±–∞–∑–æ–≤–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
    '–®–µ–ø–µ—Ç—ñ–≤—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
    '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–¥–∏—Ü–∏–Ω–∏ —Ç–∞ –±—ñ–æ–º–µ–¥–∏—á–Ω–∏—Ö –Ω–∞—É–∫',
    '(–ñ–ë–§–§–ö) –ñ–∏—Ç–æ–º–∏—Ä—Å—å–∫–∏–π –±–∞–∑–æ–≤–∏–π —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
    '–ö–∞–º\'—è–Ω–µ—Ü—å-–ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π —Ñ–∞—Ö–æ–≤–∏–π –∫–æ–ª–µ–¥–∂',
    '–ö–∞–º\'—è–Ω—Å—å–∫–∏–π –º–µ–¥–∏—á–Ω–∏–π –∫–æ–ª–µ–¥–∂',
    '–ù–∞–≤—á–∞–ª—å–Ω–æ-–Ω–∞—É–∫–æ–≤–∏–π —ñ–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–¥—Å–µ—Å—Ç—Ä–∏–Ω—Å—Ç–≤–∞'
  ]

  console.log('üìù –°–ø–∏—Å–æ–∫ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ Supabase:')
  universities.forEach((uni, index) => {
    console.log(`${index + 1}. ${uni}`)
  })

  console.log('\nüìã SQL –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ universities:')
  console.log(`
-- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ universities
CREATE TABLE universities (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL UNIQUE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—ñ–≤ –¥–æ —Ç–∞–±–ª–∏—Ü—ñ users
ALTER TABLE users 
ADD COLUMN IF NOT EXISTS university_id INTEGER REFERENCES universities(id),
ADD COLUMN IF NOT EXISTS step TEXT DEFAULT 'krok1' CHECK (step IN ('krok1', 'krok2', 'krok3'));
`)

  console.log('\nüìù SQL –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ–≤:')
  universities.forEach((uni, index) => {
    console.log(`INSERT INTO universities (name) VALUES ('${uni}');`)
  })

  return true
}

async function main() {
  console.log('üöÄ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö Supabase...')
  
  const connectionOk = await testConnection()
  if (!connectionOk) {
    console.log('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ Supabase')
    process.exit(1)
  }

  await createUniversities()
  
  console.log('\nüéâ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –≥–æ—Ç–æ–≤—ñ!')
  console.log('üìã –í–∏–∫–æ–Ω–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:')
  console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ Supabase Dashboard')
  console.log('2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ SQL Editor')
  console.log('3. –í–∏–∫–æ–Ω–∞–π—Ç–µ SQL –∫–æ–º–∞–Ω–¥–∏ –∑–≤–µ—Ä—Ö—É')
  console.log('4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä —Ä–æ–∑—Ä–æ–±–∫–∏')
}

main().catch(console.error)